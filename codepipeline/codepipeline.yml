---
AWSTemplateFormatVersion: '2010-09-09'
Resources:
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: "mackechniealex-codebuild"
      Environment:
        Type: LINUX_CONTAINER
        Image: "docker.io/python:3.7.16-slim-bullseye"
        ComputeType: BUILD_GENERAL1_SMALL
      Artifacts:
        Type: NO_ARTIFACTS
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              commands:
                - echo "Installing things..."
            build:
              commands:
                - echo "Hello There! The python version is:"
                - echo `python --version`

  CodeBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: CodeBuildActions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:*
                  - logs:*
                  - s3:*
                Resource: '*'

  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: CodeBuildActions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:*
                  - s3:*
                Resource: '*'
        
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt [CodePipelineRole, Arn]
      ArtifactStore: 
        Type: S3
        Location: !Ref CodePipelineArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: '1'
                Category: Source
              Region: eu-west-2
              Configuration:
                S3Bucket: !Ref CodePipelineSourceBucket
                S3ObjectKey: source.zip
                PollForSourceChanges: 'false'
              OutputArtifacts:
                - Name: OutputFromSource
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
              InputArtifacts:
                - Name: OutputFromSource

  CodePipelineArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: mackechniealex-codepipeline-artifacts

  CodePipelineSourceBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: mackechniealex-codepipeline-source
      VersioningConfiguration:
        Status: Enabled
